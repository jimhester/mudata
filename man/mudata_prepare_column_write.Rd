% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mudata.io.R
\name{mudata_prepare_column_write}
\alias{mudata_prepare_column_write}
\alias{mudata_prepare_column_write.default}
\alias{mudata_prepare_column_write.POSIXt}
\alias{mudata_prepare_column_write.sfc}
\alias{mudata_prepare_column_write.hms}
\alias{mudata_prepare_column_write.list}
\alias{mudata_parse_column}
\title{Prepare mudata table columns for writing}
\usage{
mudata_prepare_column_write(x, format = NA, ...)

\method{mudata_prepare_column_write}{default}(x, format = NA, ...)

\method{mudata_prepare_column_write}{POSIXt}(x, format = NA, ...)

\method{mudata_prepare_column_write}{sfc}(x, format = NA, ...)

\method{mudata_prepare_column_write}{hms}(x, format = NA, ...)

\method{mudata_prepare_column_write}{list}(x, format = NA, ...)

mudata_parse_column(x, type_str = NA_character_, ...)
}
\arguments{
\item{x}{A vector object}

\item{format}{NA for unknown, csv, or json.}

\item{...}{Passed to methods}

\item{type_str}{A type string, generated by \link{generate_type_str}}
}
\value{
An atomic vector
}
\description{
This set of generics is similar to \link[readr]{output_column} in that it
converts columns to a form suitable to writing.
\code{mudata_prepare_column_write} in combination with
\link{generate_type_str}, is opposites with \code{mudata_parse_column}.
}
